Cross Bias

- the galaxy leg should be associated with L (not l or L-l) in order to comply with TypeA1 and TypeA2 codes
  - flag cross_bias in Spectra_cross.py, recalculate bispectrum for bias, add to git!
    - noticed wrong 1/l convention, recomputing bi_phiphig and interp 
    - spike in beta para/ starting test series 
      - test1: higher angular sampling -> better!
      - test2: delta_theta=0 -> slightly more power in parallel integral
      - test4: linear l-spacing -> same result as for lin spampling
      
      - better angular sampling seems to remedy this. 
      - test5 with 150/150/190 -> not really better and less power
      - test6 with 160/160/210 -> same power as test5 but not better
      - test7 with 150/150/190, delta theta=1e-4, both sides, kmin and kmax, 5e-5, 1000
       -> no significant difference, also spiky...
      - test8 with 150/150/190, full angle, delta theta=1e-4 both sides, kmin 1e-4, kmax 100
      - full ang without factor of 2 gives same result as half and with factor of 2!
     
      
     --> no significant difference between tests, continue with 163**3, to avoid bugs due to non symmetric sampling
      - slightly change the way bin is enforced to match power_spectra.py -> no impact on result
      - added to git
    
  - spline smoothing for Type C to get rid of spikes in Type C bias 
 
  - cross_integral folder contains beta integrals for bias
  - cross_bias_spectra contains bispectra for bias computation



- Post Born corrections were small because of wrong transformation between Weyl and gravitational potential...
- now up to ~25% for equilat and squeezed
- make plots of folded and equilateral configuration (B_kkk, B_kkg, and their Post Born corrections) - done and uploaded, ipython notebook
- new beta Integrals with post born corrections calculated. Only seem to matter for I2 and not I0. (checked that L is associated with galaxy leg in post born)
- Post born corrections show wiggles in I2 integral for bin 1,2 and broad redshift distribution
-> delta_theta 1e-4 or 0 does not make a difference
-> change in I2 computation does not make a difference
-> lin insteag of log smapling with delta theta 1e-2 suddenly seems to make a difference ... testing
-> 150 150 200 looks smooth, comparing to 140 140 220... (only looks smooth in postBorn only)
-> spikes change place depending on sampling method

  

- test Type A code for different configs (bin 0)
  - l sampling 256 (TypeAdom), queued
  -> seems to match TypeC calculation, bispec_phi deleted, interp method stored in commit f915f9ba04309946efb12188a520a0e38cfa1d51
  (to check for ell configuration)
 --> wait until it finishes before submitting more
  - ang sampling 
  - lcut dependence
  - lmin, lmax dependence
  - delta theta: 1e-4, 1e-2, 0.
  - full angle
  - look for cancelation at low ell

- need to compile TypeAdom_i.pyx and run
  
- (check if you integrate correctly for Type1 bias) probably yes
- implement for EB
  - same tests for EB
  
- measure bias in simulations with iterative estimator


S/N 

- not that in S/N code g is associated with L3 = Ll, while for Bias Code g must be associated with L (change in Spectra_cross)
- read bias review
- read Takada & Jain
  - how to combine different bins/bispectra?
  

- test Post Born corrections
  - change galaxy kernel to lensing kernel
  - expand galaxy kernel
  - test for different triangle configs
  
- matched S/N with Toshiya?
  - agree on configuration to use (cosmology, bins, noise, experiments)
  
- compute B_kgg and B_kkg S/N

- speed up code for calculation with different parameters settings







  